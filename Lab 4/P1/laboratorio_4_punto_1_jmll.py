# -*- coding: utf-8 -*-
"""Laboratorio #4 Punto 1 JMLL

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WNKGDq9CF5bM3y8-LsW3UB_0bDmT4prw
"""

!pip install control
import os
import matplotlib.pyplot as plt # MATLAB plotting functions
from control.matlab import * # MATLAB-like functions
import control as ct
from scipy.io import loadmat
import pandas as pd
import numpy as np
from math import log10
from tabulate import tabulate

#sys = ct.tf([118.24**2],[1,2*118.24*0.5912,118.24**2])
#----------------------------------------------------------------------------------------------------
                               #K=10
#sys = ct.tf([(5*10/4)],[1,7,12,10])
#print(sys)
#t = np.linspace(0, 100000, 100)
#KC=5*10/4;
#k=10
#print("K=10")
#tt=3
#----------------------------------------------------------------------------------------------
                             #K=5
sys = ct.tf([6.25],[1,7,12,10])
print(sys)
t = np.linspace(0, 100000, 100)
KC=5*5/4
k=5
print("K=5")
tt=3

print("-------------------------------------------------------------------------------------------------\n")


#----------------------------------------------------------------------------------------------
step = ct.step_response(sys, T=t)
info = ct.step_info(sys)
poles,zeros=pzmap(sys)
ct.bode(sys,dB=True)

#-------------------------------------------------------------------------------------------------------

                  #Frecuencia de Corte

if k == 10:
  KcdB=20*log10(KC)
  KCdB=KcdB-20*log10(2)
  PC=10**(KCdB/20)
  print("La frecuencia de Corte es")
  print(f"Wc=",PC)
  
  print("..............................................................................................\n")

if k == 5:
  KcdB=20*log10(KC)
  KCdB=KcdB-20*log10(2)
  PC=10**(KCdB/20)
  print("La frecuencia de Corte es")
  print(f"Wc=",PC)
  print(".............................................................................................\n")


#------------------------------------------------------------------------------------------
            #Margen de Ganancia
if k ==10:
  MG1=20*log10(KC)
  MG2=-40*log10((100/2))
  print(f"El margen de Ganancia es    :\n",MG1,f"dB")
  print(f"                hasta",MG2,f"dB")
  print("----------------------------------------------------------------------------------------------\n")

if k==5:
  MG1=20*log10(KC)
  MG2=-40*log10((100/2))
  print(f"El margen de Ganancia es   :\n",MG1,f"dB")
  print(f"                hasta\n",MG2,f"dB")
  print("----------------------------------------------------------------------------------------------\n")
 

#----------------------------------------------------------------------------------

          #Margen de Fase
print("El Margen de Fase es (Polos Complejos)\n")
print("w1= 5")
w1=5
print("w2 y w3 = 2")
print("C=0\n")
print("------------------------------------------------------------------------------------------------\n")

#........................................................................................

        #Pico de Resonancia
R=(1-(2*(0.5)**2))**(1/2)
wr=R*2
I=(2*0.5)*(1-(0.5)**2)**(1/2)
i=1/I
T=abs(i)
mr=20*log10(i)
print("El pico de Resoanancia es \n")
print(f"Mr(dB)=",mr)
print(f"Wr=(Rad/s)=",wr)
print("\n")
print("--------------------------------------------------------------------------------------\n")

#----------------------------------------------------------------------------------------------
                #Ancho de Banda
if k==5:
  fb=1.3609
  print(f"El ancho de Banda es ",fb)
  print("\n")

if k == 10:
  fb=1.3609
  print(f"El ancho de Banda es ",fb)
  print("\n")

#-----------------------------------------------------------------------------------------------

                #Constantes de Error Estaticos
if tt==3:
  print("Constante de Error de Aceleracion")
  print(f"Ka=",PC)
  if tt>2:
    print("Constante de Error de Velocidad")
    print(f"kv = ",w1)
    if tt >1:
      print("Constante de Error de posicion ")
      print(f"kp =",KC)


if tt==2:
    print("Constante de Error de Velocidad")
    print(f"kv = ",w1)
    if tt >1:
      print("Constante de Error de posicion ")
      print(f"kp =",KC)

if tt ==1:
      print("Constante de Error de posicion ")
      print(f"kp =",KC)

poles,zeros=pzmap(sys)
 
print("La funciones de\n")
if KC < 0:
  print("Fase no Minima\n")
if KC > 0:
  print("Fase Minima\n")